"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[686],{4137:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>g});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),c=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=c(e.components);return n.createElement(p.Provider,{value:r},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,g=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return t?n.createElement(g,i(i({ref:r},l),{},{components:t})):n.createElement(g,i({ref:r},l))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var p in r)hasOwnProperty.call(r,p)&&(s[p]=r[p]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},841:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=t(7462),a=(t(7294),t(4137));const o={},i="Image Generation API",s={unversionedId:"raw-api-access/images-generations",id:"raw-api-access/images-generations",title:"Image Generation API",description:"The Azure OpenAI proxy service supports the Azure OpenAI Image Generation API, as of November 2023, the OpenAI Dall-e 2 model is supported. Requests are forwarded to the Azure OpenAI service and the response is returned to the caller.",source:"@site/docs/80-raw-api-access/40-images-generations.md",sourceDirName:"80-raw-api-access",slug:"/raw-api-access/images-generations",permalink:"/azure-openai-service-proxy/raw-api-access/images-generations",draft:!1,editUrl:"https://github.com/gloveboxes/azure-openai-service-proxy/tree/master/docs/docs/80-raw-api-access/40-images-generations.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Embeddings API",permalink:"/azure-openai-service-proxy/raw-api-access/embedding"}},p={},c=[{value:"Using cURL to access the Image Generation API",id:"using-curl-to-access-the-image-generation-api",level:2}],l={toc:c},u="wrapper";function m(e){let{components:r,...t}=e;return(0,a.kt)(u,(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"image-generation-api"},"Image Generation API"),(0,a.kt)("p",null,"The Azure OpenAI proxy service supports the Azure OpenAI Image Generation API, as of November 2023, the OpenAI ",(0,a.kt)("inlineCode",{parentName:"p"},"Dall-e 2")," model is supported. Requests are forwarded to the Azure OpenAI service and the response is returned to the caller."),(0,a.kt)("p",null,"The is no SDK for the Image Generation API, so, using your preferred programming language, make REST calls to the proxy service Image Generation API endpoint."),(0,a.kt)("h2",{id:"using-curl-to-access-the-image-generation-api"},"Using cURL to access the Image Generation API"),(0,a.kt)("p",null,"The following example demonstrates how to use ",(0,a.kt)("inlineCode",{parentName:"p"},"cURL")," to access the Image Generation API. Remember, the ",(0,a.kt)("inlineCode",{parentName:"p"},"EVENT_TOKEN")," is the EventCode/GitHubUserName, eg ",(0,a.kt)("inlineCode",{parentName:"p"},"hackathon/gloveboxes"),", and the ",(0,a.kt)("inlineCode",{parentName:"p"},"PROXY_ENDPOINT_URL")," is proxy url provided by the event administrator."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl -X POST -H "Content-Type: application/json" -H "api-key: API_KEY" -d \'{\n  "prompt": "cute picture of a cat",\n  "size": "1024x1024",\n  "n": 2\n}\' https://PROXY_ENDPOINT_URL/v1/api/images/generations | jq\n')))}m.isMDXComponent=!0}}]);